name: Translate README

permissions:
  contents: write

on:
  push:
    branches:
      - main
    paths:
      - '[0-9][0-9][0-9][0-9]-*/README.md'  # LeetCode 문제 패턴만 (예: 0001-two-sum/README.md)
      - 'app/**/*.ts'
      - 'tsconfig.json'
      - 'package.json'
      - '.github/workflows/translate-readme.yml'
  workflow_dispatch: # 수동 실행 지원

jobs:
  translate:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 2 # 최근 2개 커밋만 가져와서 충돌 가능성 최소화
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm install

      - name: Type check TypeScript files
        run: npm run type-check

      - name: Check if this is a LeetHub commit
        id: check_commit
        run: |
          COMMIT_MSG=$(git log -1 --pretty=%B)
          echo "Commit message: $COMMIT_MSG"
          
          # LeetHub 커밋인지 확인 (LeetHub 특징적인 패턴 검사)
          if echo "$COMMIT_MSG" | grep -qE "(Create README - LeetHub|Time:|Space:|LeetHub)"; then
            echo "is_leetcode=true" >> $GITHUB_OUTPUT
            echo "✅ LeetHub commit detected, will run translation"
          else
            echo "is_leetcode=false" >> $GITHUB_OUTPUT
            echo "❌ Not a LeetHub commit, skipping translation"
          fi

      - name: Find and translate README files
        if: steps.check_commit.outputs.is_leetcode == 'true'
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        run: |
          if [ -z "$OPENAI_API_KEY" ]; then
            echo "⚠️ OPENAI_API_KEY is not set, skipping translation"
            exit 0
          fi
          npm run translate

      - name: Commit changes
        if: steps.check_commit.outputs.is_leetcode == 'true'
        run: |
          git config --local user.email "${{ github.actor }}@users.noreply.github.com"
          git config --local user.name "${{ github.actor }}"
          git config pull.rebase false
          
          # 변경사항이 있는지 확인
          if [ -z "$(git status --porcelain)" ]; then
            echo "No changes to commit"
            exit 0
          fi
          
          # 변경사항을 먼저 스테이징
          git add .
          
          # 안전한 pull 전략 - 간단한 접근법
          git fetch origin main
          git merge origin/main || {
            echo "Merge failed, trying to resolve automatically"
            # 자동 번역 파일들은 충돌 시 remote 버전 우선
            git checkout --theirs '*.md' || true
            git checkout --theirs '*.json' || true
            git add .
            git commit --no-edit || true
          }
          
          # 최종 커밋 및 푸시
          git add .
          if git diff --cached --quiet; then
            echo "No staged changes to commit"
          else
            echo "Committing changes..."
            git commit -m "Update Korean translations [automated]" || echo "Commit failed, but continuing..."
            git push origin main || echo "Push failed, but workflow completed"
          fi
